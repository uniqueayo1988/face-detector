{"version":3,"sources":["brain.svg","components/Navigation.js","components/FaceRecognition.js","components/Logo.js","components/ImageLinkForm.js","components/Rank.js","components/Signin.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","FaceRecognition","input","box","leftCol","topRow","rightCol","bottomRow","id","src","alt","width","height","top","right","bottom","left","Logo","options","max","brain","ImageLinkForm","onChange","onButtonSubmit","type","Rank","name","rank","Signin","state","signInEmail","signInPassword","onEmailChange","e","setState","target","value","onPasswordChange","onSubmitSignin","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","user","props","loadUser","console","log","this","htmlFor","React","Component","Register","onNameChange","particlesOptions","app","Clarifai","App","apiKey","initialState","route","entries","joined","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","onInputChange","models","predict","FACE_DETECT_MODEL","count","Object","assign","catch","err","text","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.376a8bee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.014560c0.svg\";","import React from 'react'\n\nconst Navigation = ({onRouteChange, isSignedIn}) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{display: 'flex', justifyContent: 'flex-end'}} onClick={() => onRouteChange('signout')}>\n        <p className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n      </nav>\n    )\n  } else {\n    return (\n      <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n        <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n        <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>        \n      </nav>\n    )\n  }  \n}\n\nexport default Navigation\n","import React from 'react'\n\nconst FaceRecognition = ({input, box}) => {\n  const {leftCol, topRow, rightCol, bottomRow} = box\n  return (\n    <div className=\"center ma\">\n    <div className=\"absolute mt2\">\n      <img id=\"inputImage\" src={input} alt=\"Face(s)\" width=\"500\" height=\"auto\"/>\n      <div \n        className=\"bounding-box\" \n        style={{top: topRow, right: rightCol, bottom: bottomRow, left: leftCol}}\n      >\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default FaceRecognition\n\n// \"https://samples.clarifai.com/face-det.jpg\"\n// https://images.pexels.com/photos/2092709/pexels-photo-2092709.jpeg\n// https://scx1.b-cdn.net/csz/news/800/2018/1-detectingfak.jpg\n","import React from 'react'\nimport Tilt from 'react-tilt'\nimport brain from '../brain.svg'\n\nconst Logo = () => {\n  return (\n    <div className=\"ma4 mt0\">\n      <Tilt className=\"Tilt br2 shadow-2 logoTilt\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\n       <div className=\"Tilt-inner pa3\"><img src={brain} alt=\"logo\"/></div>\n      </Tilt>\n    </div>\n  )\n}\n\nexport default Logo\n","import React from 'react'\n\nconst ImageLinkForm = ({onChange, onButtonSubmit}) => {\n  return (\n    <div>\n      <p className=\"f3\">\n        {'This Magic Brain will detect faces in your pictures. Give it a try.'}\n      </p>\n      <div className=\"pa4 br3 w-50 center shadow-5 imageForm\">\n        <div className=\"br3 w-100\">\n          <input className=\"f4 pa2 w-70\" type=\"text\" onChange={onChange} />\n          <button className=\"w-30 f4 link grow ph3 pv2 dib white bg-light-purple\" onClick={onButtonSubmit}>Detect</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ImageLinkForm\n","import React from 'react'\n\nconst Rank = ({name, rank}) => {\n  return (\n    <div>\n      <div className='white f3'>\n       {`Welcom ${name}, your current Rank is...`}\n      </div>\n      <div className='white f1'>\n       {rank}\n      </div>\n    </div>\n  )\n}\n\nexport default Rank\n","import React from 'react'\n\nclass Signin extends React.Component {\n  state = {\n    signInEmail: '',\n    signInPassword: ''\n  }\n\n  onEmailChange = (e) => {\n    this.setState({\n      signInEmail: e.target.value\n    })\n  }\n\n  onPasswordChange = (e) => {\n    this.setState({\n      signInPassword: e.target.value\n    })\n  }\n\n  onSubmitSignin = () => {\n    fetch('https://nameless-anchorage-26722.herokuapp.com/signin', {\n      method: 'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home')\n        } else {\n          console.log('sorry...')\n        }\n      })\n  }\n\n  render () {\n    const {onRouteChange} = this.props\n    return (\n      <article className=\"mw6 center bg-grey br3 pa3 pa4-ns mv3 ba shadow-5 b--black-10\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n                onClick={this.onSubmitSignin}\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n            </div>\n          </div>\n        </main>\n      </article>\n    )\n  }\n}\n\nexport default Signin\n","import React from 'react'\n\n// const Register = ({onRouteChange}) => {\nclass Register extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    name: ''\n  }\n\n  onEmailChange = (e) => {\n    this.setState({\n      email: e.target.value\n    })\n  }\n\n  onPasswordChange = (e) => {\n    this.setState({\n      password: e.target.value\n    })\n  }\n\n  onNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  onSubmitSignin = () => {\n    fetch('https://nameless-anchorage-26722.herokuapp.com/register', {\n      method: 'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home')\n        } else {\n          console.log('sorry...')\n        }\n      })\n  }\n\n  render () {\n    const {onRouteChange} = this.props\n\n    return (\n      <article className=\"mw6 center bg-grey br3 pa3 pa4-ns mv3 ba shadow-5 b--black-10\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.onNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n                onClick={this.onSubmitSignin}\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p onClick={() => onRouteChange('signin')} className=\"f6 link dim black db pointer\">Sign In</p>\n            </div>\n          </div>\n        </main>\n      </article>\n    )\n  }\n}\n\nexport default Register\n","import React from 'react';\nimport Particles from 'react-particles-js'\nimport Clarifai from 'clarifai'\nimport Navigation from './components/Navigation'\nimport FaceRecognition from './components/FaceRecognition'\nimport Logo from './components/Logo'\nimport ImageLinkForm from './components/ImageLinkForm'\nimport Rank from './components/Rank'\nimport Signin from './components/Signin'\nimport Register from './components/Register'\nimport './App.css';\n\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 160,\n      \"density\": {\n        \"enable\": false\n      }\n    },\n    \"size\": {\n      \"value\": 10,\n      \"random\": true\n    },\n    \"line_linked\": {\n        \"enable\": false\n    }\n  }\n}\n\nconst app = new Clarifai.App({\n apiKey: '4f5e9705cef64ee8950179118a78540e'\n});\n\nconst initialState = {\n  input: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''      \n  }\n}\n\nclass App extends React.Component {\n  state = initialState\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined  \n    }})\n  }\n\n  componentDidMount () {\n    fetch('https://nameless-anchorage-26722.herokuapp.com/')\n      // .then(response => response.json())\n      .then(response => response.text())\n      .then(data => console.log(data))\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({\n      box\n    })\n  }\n\n  onInputChange = (e) => {\n    this.setState({\n      box: {},\n      input: e.target.value\n    })\n  }\n\n  onButtonSubmit = () => {\n    app.models.predict(\n        // \"a403429f2ddf4b49b307e318f00e528b\",\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input\n      ).then(response => {\n        if (response) {\n          fetch('https://nameless-anchorage-26722.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, {entries: count}))\n            })\n            .catch(console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({\n        isSignedIn: true\n      })\n    }\n    this.setState({\n      route: route\n    })\n  }\n\n  render () {\n    const {route, box, input, isSignedIn} = this.state\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\n        { route === 'home'\n          ? <div> \n            <Logo />\n            <Rank rank={this.state.user.entries} name={this.state.user.name} />\n            <ImageLinkForm onChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n            <FaceRecognition box={box} input={input}/>\n          </div>\n          : (\n            route === 'signin'\n            ? <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n            : <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}